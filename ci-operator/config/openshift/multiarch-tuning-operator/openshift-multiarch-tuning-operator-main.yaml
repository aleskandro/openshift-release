base_images:
  base:
    name: builder
    namespace: ocp
    tag: rhel-9-enterprise-base-multi-openshift-4.17
  builder:
    name: builder
    namespace: ocp
    tag: rhel-9-golang-1.22-builder-multi-openshift-4.17
binary_build_commands: NO_DOCKER=1 make build
build_root:
  from_repository: true
images:
- dockerfile_path: Dockerfile
  from: base
  inputs:
    builder:
      as:
      - golang:1.22
  multi_arch: true
  to: multiarch-tuning-operator
- dockerfile_path: bundle.Dockerfile
  multi_arch: true
  to: multiarch-tuning-op-bundle
- dockerfile_literal: |
    FROM quay.io/operator-framework/operator-sdk:v1.31.0 as osdk
    FROM src
    COPY --from=osdk /usr/local/bin/operator-sdk /usr/local/bin/
  from: src
  multi_arch: true
  to: operator-sdk-mto
operator:
  bundles:
  - as: multiarch-tuning-operator-bundle
    dockerfile_path: bundle.Dockerfile
  substitutions:
  - pullspec: registry.ci.openshift.org/origin/multiarch-tuning-operator:main
    with: pipeline:multiarch-tuning-operator
promotion:
  to:
  - namespace: origin
    tag: main
releases:
  initial:
    integration:
      name: "4.17"
      namespace: ocp
  latest:
    integration:
      include_built_images: true
      name: "4.17"
      namespace: ocp
  multi-4-16:
    release:
      architecture: multi
      channel: candidate
      version: "4.16"
  multi-4-17:
    release:
      architecture: multi
      channel: candidate
      version: "4.17"
  multi-4-18:
    candidate:
      architecture: multi
      product: ocp
      stream: nightly
      version: "4.18"
resources:
  '*':
    limits:
      memory: 4Gi
    requests:
      cpu: 100m
      memory: 200Mi
  lint:
    limits:
      memory: 6Gi
    requests:
      cpu: 500m
      memory: 1Gi
  sast:
    limits:
      memory: 6Gi
    requests:
      cpu: 300m
      memory: 400Mi
tests:
- as: fmt
  cluster: build10
  commands: NO_DOCKER=1 make fmt && make verify-diff
  container:
    from: src
  skip_if_only_changed: (^docs/)|((^|/)OWNERS(_ALIASES)?$)|((^|/)[A-Za-z]+\.md$)|((^|/)\.github/)|((^|/)\.tekton/)|((^|/).*konflux\.Dockerfile$)
- as: vet
  cluster: build10
  commands: NO_DOCKER=1 make vet && make verify-diff
  container:
    from: src
  skip_if_only_changed: (^docs/)|((^|/)OWNERS(_ALIASES)?$)|((^|/)[A-Za-z]+\.md$)|((^|/)\.github/)|((^|/)\.tekton/)|((^|/).*konflux\.Dockerfile$)
- as: vendor
  cluster: build10
  commands: NO_DOCKER=1 make vendor && make verify-diff
  container:
    from: src
  skip_if_only_changed: (^docs/)|((^|/)OWNERS(_ALIASES)?$)|((^|/)[A-Za-z]+\.md$)|((^|/)\.github/)|((^|/)\.tekton/)|((^|/).*konflux\.Dockerfile$)
- as: goimports
  cluster: build10
  commands: NO_DOCKER=1 make goimports && make verify-diff
  container:
    from: src
  skip_if_only_changed: (^docs/)|((^|/)OWNERS(_ALIASES)?$)|((^|/)[A-Za-z]+\.md$)|((^|/)\.github/)|((^|/)\.tekton/)|((^|/).*konflux\.Dockerfile$)
- as: lint
  cluster: build10
  commands: NO_DOCKER=1 make lint && make verify-diff
  container:
    from: src
  skip_if_only_changed: (^docs/)|((^|/)OWNERS(_ALIASES)?$)|((^|/)[A-Za-z]+\.md$)|((^|/)\.github/)|((^|/)\.tekton/)|((^|/).*konflux\.Dockerfile$)
- as: sast
  cluster: build10
  commands: NO_DOCKER=1 make gosec && make verify-diff
  container:
    from: src
  skip_if_only_changed: (^docs/)|((^|/)OWNERS(_ALIASES)?$)|((^|/)[A-Za-z]+\.md$)|((^|/)\.github/)|((^|/)\.tekton/)|((^|/).*konflux\.Dockerfile$)
- as: manifests
  cluster: build10
  commands: NO_DOCKER=1 make manifests && make verify-diff
  container:
    from: src
  skip_if_only_changed: (^docs/)|((^|/)OWNERS(_ALIASES)?$)|((^|/)[A-Za-z]+\.md$)|((^|/)\.github/)|((^|/)\.tekton/)|((^|/).*konflux\.Dockerfile$)
- as: generate
  cluster: build10
  commands: NO_DOCKER=1 make generate && make verify-diff
  container:
    from: src
  skip_if_only_changed: (^docs/)|((^|/)OWNERS(_ALIASES)?$)|((^|/)[A-Za-z]+\.md$)|((^|/)\.github/)|((^|/)\.tekton/)|((^|/).*konflux\.Dockerfile$)
- as: unit
  cluster: build10
  commands: NO_DOCKER=1 make unit
  container:
    from: src
  skip_if_only_changed: (^docs/)|((^|/)OWNERS(_ALIASES)?$)|((^|/)[A-Za-z]+\.md$)|((^|/)\.github/)|((^|/)\.tekton/)|((^|/).*konflux\.Dockerfile$)
- as: security
  cluster: build10
  optional: true
  skip_if_only_changed: (^docs/)|((^|/)OWNERS(_ALIASES)?$)|((^|/)[A-Za-z]+\.md$)|((^|/)\.github/)|((^|/)\.tekton/)|((^|/).*konflux\.Dockerfile$)
  steps:
    env:
      PROJECT_NAME: multiarch-tuning-operator
    workflow: openshift-ci-security
- as: bundle
  cluster: build10
  commands: unset VERSION; NO_DOCKER=1 make bundle-verify
  container:
    from: operator-sdk-mto
  skip_if_only_changed: (^docs/)|((^|/)OWNERS(_ALIASES)?$)|((^|/)[A-Za-z]+\.md$)|((^|/)\.github/)|((^|/)\.tekton/)
- as: e2e-gcp-4-16
  cluster: build10
  skip_if_only_changed: (^docs/)|((^|/)OWNERS(_ALIASES)?$)|((^|/)[A-Za-z]+\.md$)|((^|/)\.github/)|((^|/)\.tekton/)|((^|/).*konflux\.Dockerfile$)
  steps:
    cluster_profile: gcp
    dependencies:
      OPENSHIFT_INSTALL_RELEASE_IMAGE_OVERRIDE: release:multi-4-16
      OPERATOR_IMAGE: pipeline:multiarch-tuning-operator
    env:
      ADDITIONAL_WORKER_ARCHITECTURE: x86_64
      ADDITIONAL_WORKER_VM_TYPE: n2-standard-4
      ADDITIONAL_WORKERS: "1"
      COMPUTE_NODE_REPLICAS: "2"
      COMPUTE_NODE_TYPE: t2a-standard-4
      OCP_ARCH: arm64
    test:
    - ref: ipi-install-heterogeneous
    - ref: multiarch-tuning-operator-e2e-olm-kustomize
    workflow: ipi-gcp
- always_run: false
  as: e2e-gcp-4-17
  cluster: build10
  optional: true
  skip_if_only_changed: (^docs/)|((^|/)OWNERS(_ALIASES)?$)|((^|/)[A-Za-z]+\.md$)|((^|/)\.github/)|((^|/)\.tekton/)|((^|/).*konflux\.Dockerfile$)
  steps:
    cluster_profile: gcp
    dependencies:
      OPENSHIFT_INSTALL_RELEASE_IMAGE_OVERRIDE: release:multi-4-17
      OPERATOR_IMAGE: pipeline:multiarch-tuning-operator
    env:
      ADDITIONAL_WORKER_ARCHITECTURE: x86_64
      ADDITIONAL_WORKER_VM_TYPE: n2-standard-4
      ADDITIONAL_WORKERS: "1"
      COMPUTE_NODE_REPLICAS: "2"
      COMPUTE_NODE_TYPE: t2a-standard-4
      OCP_ARCH: arm64
    test:
    - ref: ipi-install-heterogeneous
    - ref: multiarch-tuning-operator-e2e-olm-kustomize
    workflow: ipi-gcp
- as: e2e-gcp-4-18
  cluster: build10
  skip_if_only_changed: (^docs/)|((^|/)OWNERS(_ALIASES)?$)|((^|/)[A-Za-z]+\.md$)|((^|/)\.github/)|((^|/)\.tekton/)|((^|/).*konflux\.Dockerfile$)
  steps:
    cluster_profile: gcp
    dependencies:
      OPENSHIFT_INSTALL_RELEASE_IMAGE_OVERRIDE: release:multi-4-18
      OPERATOR_IMAGE: pipeline:multiarch-tuning-operator
    env:
      ADDITIONAL_WORKER_ARCHITECTURE: x86_64
      ADDITIONAL_WORKER_VM_TYPE: n2-standard-4
      ADDITIONAL_WORKERS: "1"
      COMPUTE_NODE_REPLICAS: "2"
      COMPUTE_NODE_TYPE: t2a-standard-4
      OCP_ARCH: arm64
    test:
    - ref: ipi-install-heterogeneous
    - ref: multiarch-tuning-operator-e2e-olm-kustomize
    workflow: ipi-gcp
- as: e2e-aws-ovn-mto-origin-4-16-post
  cluster: build10
  postsubmit: true
  skip_if_only_changed: (^docs/)|((^|/)OWNERS(_ALIASES)?$)|((^|/)[A-Za-z]+\.md$)|((^|/)\.github/)|((^|/)\.tekton/)|((^|/)konflux\.Dockerfile$)
  steps:
    cluster_profile: aws
    dependencies:
      OPENSHIFT_INSTALL_RELEASE_IMAGE_OVERRIDE: release:multi-4-16
    env:
      ADDITIONAL_WORKER_ARCHITECTURE: x86_64
      ADDITIONAL_WORKER_VM_TYPE: m6i.xlarge
      ADDITIONAL_WORKERS: "1"
      COMPUTE_NODE_REPLICAS: "2"
      COMPUTE_NODE_TYPE: m6g.xlarge
      MTO_OPERATOR_INSTALL_METHOD: catalog
      OCP_ARCH: arm64
      TEST_SKIPS: deploymentconfigs\| should expose cluster services outside the cluster\|
        FIPS TestFIPS\| Multi-stage image builds should succeed\| Optimized image
        builds should succeed\| build can reference a cluster service\| custom build
        with buildah\| oc new-app should succeed\| prune builds based on settings\|
        s2i build with a root\| verify /run filesystem contents\| oc can run\| oc
        debug\| oc idle\| Pods cannot access\| Image append should create\| Image
        extract should extract\| Image info should display\| Image layer subresource\|
        oc tag should change image\| when installed on the cluster should\| OpenShift
        alerting rules\| The HAProxy router should\| egressrouter cni resources\|
        pod should start\| pod sysctls\| build volumes should mount given secrets
        and configmaps into the build pod\|APIs for openshift.io must have stable
        versions
    test:
    - ref: ipi-install-heterogeneous
    - chain: multiarch-tuning-operator
    - ref: openshift-e2e-test
    workflow: openshift-e2e-aws-ovn
- as: e2e-aws-ovn-mto-origin-4-17-post
  cluster: build10
  postsubmit: true
  skip_if_only_changed: (^docs/)|((^|/)OWNERS(_ALIASES)?$)|((^|/)[A-Za-z]+\.md$)|((^|/)\.github/)|((^|/)\.tekton/)|((^|/)konflux\.Dockerfile$)
  steps:
    cluster_profile: aws
    dependencies:
      OPENSHIFT_INSTALL_RELEASE_IMAGE_OVERRIDE: release:multi-4-17
    env:
      ADDITIONAL_WORKER_ARCHITECTURE: x86_64
      ADDITIONAL_WORKER_VM_TYPE: m6i.xlarge
      ADDITIONAL_WORKERS: "1"
      COMPUTE_NODE_REPLICAS: "2"
      COMPUTE_NODE_TYPE: m6g.xlarge
      MTO_OPERATOR_INSTALL_METHOD: catalog
      OCP_ARCH: arm64
      TEST_SKIPS: deploymentconfigs\| should expose cluster services outside the cluster\|
        FIPS TestFIPS\| Multi-stage image builds should succeed\| Optimized image
        builds should succeed\| build can reference a cluster service\| custom build
        with buildah\| oc new-app should succeed\| prune builds based on settings\|
        s2i build with a root\| verify /run filesystem contents\| oc can run\| oc
        debug\| oc idle\| Pods cannot access\| Image append should create\| Image
        extract should extract\| Image info should display\| Image layer subresource\|
        oc tag should change image\| when installed on the cluster should\| OpenShift
        alerting rules\| The HAProxy router should\| egressrouter cni resources\|
        pod should start\| pod sysctls\| build volumes should mount given secrets
        and configmaps into the build pod\|APIs for openshift.io must have stable
        versions
    test:
    - ref: ipi-install-heterogeneous
    - chain: multiarch-tuning-operator
    - ref: openshift-e2e-test
    workflow: openshift-e2e-gcp-ovn
- as: e2e-aws-ovn-mto-origin-4-18-post
  cluster: build10
  postsubmit: true
  skip_if_only_changed: (^docs/)|((^|/)OWNERS(_ALIASES)?$)|((^|/)[A-Za-z]+\.md$)|((^|/)\.github/)|((^|/)\.tekton/)|((^|/)konflux\.Dockerfile$)
  steps:
    cluster_profile: aws
    dependencies:
      OPENSHIFT_INSTALL_RELEASE_IMAGE_OVERRIDE: release:multi-4-18
    env:
      ADDITIONAL_WORKER_ARCHITECTURE: x86_64
      ADDITIONAL_WORKER_VM_TYPE: m6i.xlarge
      ADDITIONAL_WORKERS: "1"
      COMPUTE_NODE_REPLICAS: "2"
      COMPUTE_NODE_TYPE: m6g.xlarge
      MTO_OPERATOR_INSTALL_METHOD: catalog
      OCP_ARCH: arm64
      TEST_SKIPS: deploymentconfigs\| should expose cluster services outside the cluster\|
        FIPS TestFIPS\| Multi-stage image builds should succeed\| Optimized image
        builds should succeed\| build can reference a cluster service\| custom build
        with buildah\| oc new-app should succeed\| prune builds based on settings\|
        s2i build with a root\| verify /run filesystem contents\| oc can run\| oc
        debug\| oc idle\| Pods cannot access\| Image append should create\| Image
        extract should extract\| Image info should display\| Image layer subresource\|
        oc tag should change image\| when installed on the cluster should\| OpenShift
        alerting rules\| The HAProxy router should\| egressrouter cni resources\|
        pod should start\| pod sysctls\| build volumes should mount given secrets
        and configmaps into the build pod\|APIs for openshift.io must have stable
        versions
    test:
    - ref: ipi-install-heterogeneous
    - chain: multiarch-tuning-operator
    - ref: openshift-e2e-test
    workflow: openshift-e2e-aws-ovn
zz_generated_metadata:
  branch: main
  org: openshift
  repo: multiarch-tuning-operator
